#!/bin/bash

set -x

main() {
    if [ ! -z $DISABLE_TESTS ]; then
        return
    fi

    TARGET="$1"

    set -e
    dir="$(dirname $0)"

    mkdir -p "$dir/../compile-test/tests/run-pass-failing/panic-runtime"
    mkdir -p "$dir/../compile-test/tests/run-pass-failing/union"
    args="$($dir/args $TARGET)"

    if [ -f "$dir/../docker/$TARGET/Dockerfile" ]; then
        tag="v$(cross -V | grep cross | cut -d' ' -f2)"
        if echo $tag | grep dev; then
            tag="latest"
        fi

        docker build -t japaric/$TARGET:$tag -f "$dir/../docker/$TARGET/Dockerfile" "$dir/../docker"
    else
        docker pull japaric/$TARGET
    fi

    docker tag japaric/$TARGET compiletest

    set +e

    if [[ $TARGET != *emscripten* ]]; then
        crates="-p alloc -p core -p std -p std_unicode"
    else
        # core and std fails to build
        crates="-p alloc -p std_unicode"
    fi

    ret=0
    if [ -z "$IGNORE" ]; then
        if [[ $TARGET != *x32* ]] && ! cross test --lib \
                   $crates \
                   --target $TARGET \
                   --no-fail-fast \
                   -- $args; then
            ret=1
        fi
        if ! cross test --lib \
                   $crates \
                   --target $TARGET \
                   --release \
                   --no-fail-fast \
                   -- $args; then
            ret=1
        fi
    fi

    if [ -z "$IGNORE_COMPILE_TEST" ]; then
        if [[ $TARGET = *windows-gnu ]]; then
            if ! COMPILE_TEST_TARGET="$TARGET" \
                 cross test \
                       -vv \
                       --manifest-path compile-test/Cargo.toml \
                       --no-fail-fast; then
                ret=1
            fi
        else
            if ! cross test \
                       -vv \
                       --target $TARGET \
                       --manifest-path compile-test/Cargo.toml \
                       --no-fail-fast; then
                ret=1
            fi
        fi
    fi

    exit $ret
}

main "$@"
