#!/usr/bin/python3

import sys

def main():
    target = sys.argv[1]

    # the test needs to be fixed to be run with cross
    # FIXME: fix upstream
    run_pass_failing(['env-home-dir.rs'])

    if not is_native(target):
        skip(qemu)
        run_pass_failing(qemu_run_pass)

    if target in general:
        skip(general[target])

    if target in general_run_pass:
        run_pass_failing(general_run_pass[target])


qemu = [
    'net::tcp::tests::multiple_connect_interleaved_greedy_schedule',
    'net::tcp::tests::multiple_connect_interleaved_lazy_schedule',
    'net::tcp::tests::timeouts',
    'net::udp::tests::timeouts',
    'process::tests::uid_to_root_fails',
    'process::tests::uid_works',
    'sys::unix::ext::net::test::timeouts',
    'collections::hash::map::test_map::test_lots_of_insertions', # takes too long
    'stress',
]

qemu_run_pass = [
    'backtrace-debuginfo.rs',
    'backtrace.rs',
    'command-before-exec.rs',
    'command-exec.rs',
    'env-args-reverse-iterator.rs',
    'env-funky-keys.rs',  # QEMU_LD_PREFIX is empty
    'fds-are-cloexec.rs',
    'issue-13304.rs',
    'issue-14456.rs',
    'issue-14940.rs',
    'issue-16272.rs',
    'issue-20091.rs',
    'issue-24313.rs',
    'issue-30490.rs',
    'multi-panic.rs',
    'no-stdio.rs',
    'out-of-stack.rs',
    'panic-runtime/lto-unwind.rs',
    'print-stdout-eprint-stderr.rs',
    'process-sigpipe.rs',
    'process-spawn-with-unicode-params.rs',
    'process-status-inherits-stdin.rs',
    'segfault-no-out-of-stack.rs',
    'signal-exit-status.rs',
    'sigpipe-should-be-ignored.rs',
    'stack-probes-lto.rs',
    'stack-probes.rs',
    'stdio-is-blocking.rs',
    'try-wait.rs',
]

general = {
    'arm-unknown-linux-gnueabi': [
        'f32::tests::test_mul_add', # 38.4 is not approximately equal to 1.2
        'f64::tests::test_mul_add', # 38.4 is not approximately equal to 1.2
    ],
    'i586-unknown-linux-gnu': [
        'f32::tests::test_float_bits_conv',
        'f64::tests::test_float_bits_conv',
        'f64::tests::test_mul_add',
    ],
    'i586-unknown-linux-musl': [
        'f32::tests::test_float_bits_conv', # left: `2144687445`,  right: `2140493141`
        'f64::tests::test_float_bits_conv', # left: `9221870836978985642`, right: `9219619037165300394`
    ],
    'i686-unknown-linux-gnu': [
        'f32::tests::test_float_bits_conv',
        'f64::tests::test_float_bits_conv',
        'f64::tests::test_mul_add', # left: `NaN`, right: `inf`
    ],
    'i686-unknown-linux-musl': [
        'f32::tests::test_float_bits_conv',
        'f64::tests::test_float_bits_conv',
    ],
    'mips64-unknown-linux-gnuabi64': [
        'f32::tests::test_powi', # 34.81 is not approximately equal to 0.028727
        'f64::tests::test_powi', # 34.81 is not approximately equal to 0.028727
    ],
    'mips64el-unknown-linux-gnuabi64': [
        'f32::tests::test_powi', # 34.81 is not approximately equal to 0.028727
        'f64::tests::test_powi', # 34.81 is not approximately equal to 0.028727
    ],
    'powerpc64le-unknown-linux-gnu': [
        'iter::test_lt', # assertion failed: a.iter().gt(b.iter()) == (a[0] > b[0])
        'option::test_ord', # assertion failed: !(nan > big)
        'tuple::test_tuple_cmp', # assertion failed: !((1.0f64, 2.0f64) > (nan, 3.0))
    ]
}

general_run_pass = {
    'arm-unknown-linux-gnueabi': [
        'intrinsics-math.rs', # 0 is not approximately equal to 2.718281828459045
    ],
    'mips-unknown-linux-gnu': [
        'i128.rs',
        'next-power-of-two-overflow-ndebug.rs',
        'u128.rs',
    ],
    'mipsel-unknown-linux-gnu': [
        'i128.rs',
        'next-power-of-two-overflow-ndebug.rs',
        'u128.rs',
    ],
    'mips64-unknown-linux-gnuabi64': [
        'extern-pass-TwoU16s.rs',
        'extern-pass-TwoU32s.rs',
        'extern-pass-TwoU64s.rs',
        'extern-pass-TwoU8s.rs',
        'extern-return-TwoU16s.rs',
        'extern-return-TwoU32s.rs',
        'extern-return-TwoU64s.rs',
        'extern-return-TwoU8s.rs',
        'intrinsics-math.rs', # 625 is not approximately equal to 0.0016
        'struct-return.rs',
        'union/union-c-interop.rs', # left: `8589934595`, right: `8471728`
    ],
    'mips64el-unknown-linux-gnuabi64': [
        'extern-pass-TwoU16s.rs',
        'extern-pass-TwoU32s.rs',
        'extern-pass-TwoU64s.rs',
        'extern-pass-TwoU8s.rs',
        'extern-return-TwoU16s.rs',
        'extern-return-TwoU32s.rs',
        'extern-return-TwoU64s.rs',
        'extern-return-TwoU8s.rs',
        'intrinsics-math.rs', # 625 is not approximately equal to 0.0016
        'struct-return.rs',
        'union/union-c-interop.rs', # left: `8589934595`, right: `274877906944`
    ],
    'powerpc-unknown-linux-gnu': [
        'conditional-compile-arch.rs', # FIXME: fix upstream
        'extern-pass-empty.rs', # segfault
        'extern-pass-TwoU16s.rs', # segfault
        'extern-pass-TwoU32s.rs', # segfault
        'extern-pass-TwoU64s.rs', # segfault
        'extern-pass-TwoU8s.rs', # segfault
        'foreign-fn-with-byval.rs', # segfault
        'issue-28676.rs', # segfault
        'struct-return.rs', # segfault
        'union/union-c-interop.rs', # segfault
    ],
    'powerpc64-unknown-linux-gnu': [
        'stack-probes-lto.rs',
        'stack-probes.rs',
    ],
    'powerpc64le-unknown-linux-gnu': [
        'saturating-float-casts.rs', # left: `255`, right: `0`
        'simd-intrinsic-generic-cast.rs', # f64 -> i32 (i32x4(-1234567, 12345678, -123456792, 1234567936) != i32x4(-1234567, 12345678, -123456789, 1234567890))
    ],
}


def is_native(target):
    return (target.startswith("i586") or
            target.startswith("i686") or
            target.startswith("x86_64")) and \
        "android" not in target


def skip(cases):
    print(" --skip ", end="")
    print(" --skip ".join(cases), end="")


def run_pass_failing(cases):
    import os
    dir = os.path.dirname(sys.argv[0]) + '/../compile-test/tests/run-pass/'
    for case in cases:
        try:
            os.rename(dir + case, dir + '../run-pass-failing/' + case)
        except:
            pass


if __name__ == "__main__":
    main()
